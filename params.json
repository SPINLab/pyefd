{"name":"PyEFD","tagline":"Python implementation of \"Elliptic Fourier Features of a Closed Contour\"","body":"# Elliptic Fourier Descriptors in Python\r\n\r\n[![Build Status](https://travis-ci.org/hbldh/pyefd.svg)](https://travis-ci.org/hbldh/pyefd)\r\n[![PyPI version](http://img.shields.io/pypi/v/pyefd.svg)](https://https://pypi.python.org/pypi/pyefd/)\r\n[![PyPI Downloads](http://img.shields.io/pypi/dm/pyefd.svg)](https://pypi.python.org/pypi/pyefd/)\r\n[![License](http://img.shields.io/pypi/l/pyefd.svg)](https://pypi.python.org/pypi/pyefd/)\r\n\r\nAn Python/NumPy implementation of the method described in \\[1\\].\r\n\r\n## Usage\r\n\r\n```sh\r\n$ pip install pyefd\r\n```\r\n\r\nGiven a closed contour of a shape, generated by e.g. [scikit-image](http://scikit-image.org/)\r\nor [OpenCV](http://opencv.org/), this package can fit a \r\n[Fourier series](https://en.wikipedia.org/wiki/Fourier_series)\r\napproximating the shape of the contour:\r\n\r\n```python\r\nfrom pyefd import elliptic_fourier_descriptors\r\ncoeffs = elliptic_fourier_descriptors(contour, order=10)\r\n```\r\nThe coefficients returned are the ``a_n``, ``b_n``, ``c_n`` and ``d_n`` of\r\nthe following Fourier series representation of the shape.\r\n\r\nThe coefficients returned are by default normalized so that they are \r\nrotation and size-invariant. This can be overridden by calling:\r\n\r\n```python\r\nfrom pyefd import elliptic_fourier_descriptors\r\ncoeffs = elliptic_fourier_descriptors(contour, order=10, normalize=False)\r\n```\r\n\r\nNormalization can also be done afterwards:\r\n\r\n```python\r\nfrom pyefd import normalize_efd\r\ncoeffs = normalize_efd(coeffs)\r\n```\r\n\r\nTo use these as features, one can write a small wrapper function:\r\n\r\n```python\r\ndef efd_feature(contour):\r\n    coeffs = elliptic_fourier_descriptors(contour, order=10, normalize=True)\r\n    return coeffs.flatten()[3:]\r\n```\r\n\r\nIf the coefficients are normalized, then ``coeffs[0, 0] = 1.0``,\r\n``coeffs[0, 1] = 0.0`` and ``coeffs[0, 2] = 0.0``, so they can be disregarded when using\r\nthe elliptic Fourier descriptors as features.\r\n\r\nSee \\[1\\] for more technical details.\r\n\r\n## Testing\r\n\r\nRun tests with::\r\n\r\n```sh\r\n$ python setup.py test\r\n```\r\nor with [Pytest](http://pytest.org/latest/)\r\n\r\n```sh\r\n$ py.test tests.py\r\n```\r\n\r\nThe tests includes a single image from the MNIST dataset of handwritten digits (\\[2\\]) as a contour to use\r\nfor testing.\r\n\r\n## References\r\n\r\n\\[1\\] [Frank P Kuhl, Charles R Giardina, Elliptic Fourier features of a closed contour, \r\nComputer Graphics and Image Processing, Volume 18, Issue 3, 1982, Pages 236-258, \r\nISSN 0146-664X, http://dx.doi.org/10.1016/0146-664X(82)90034-X.](http://www.sci.utah.edu/~gerig/CS7960-S2010/handouts/Kuhl-Giardina-CGIP1982.pdf)\r\n\r\n\\[2\\] [LeCun et al. (1999): The MNIST Dataset Of Handwritten Digits](http://yann.lecun.com/exdb/mnist/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}